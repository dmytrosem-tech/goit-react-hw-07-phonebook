{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-operations.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","redux/Phonebook/selectors.js","Components/ContactList/ContactList.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","o","dispatch","post","then","data","catch","e","contactId","delete","get","ContactForm","contName","uuid","contNumber","useState","name","setName","number","setNumber","active","useDispatch","handleChangeAllInputs","target","value","console","warn","resetForm","className","styles","form","onSubmit","preventDefault","contactsOperations","phone","form__label","htmlFor","form__input","type","id","pattern","title","required","onChange","placeholder","form__btn","disabled","Filter","filter","setFilter","box","input","ContactItem","contacts__item","contact__name","contact__number","contacts__btn","onClick","getContacts","state","phonebook","contacts","getFilter","ContactList","useSelector","useEffect","contacts__list","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","map","App","contactsList","createReducer","_","payload","some","alert","contactsFilter","phoneBookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0302ac61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"ContactItem_contacts__item__35x6N\",\"contact__name\":\"ContactItem_contact__name__t8xtg\",\"contact__number\":\"ContactItem_contact__number__KMvEb\",\"contacts__btn\":\"ContactItem_contacts__btn__3Kw-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__1owqC\",\"input\":\"Filter_input__2YIXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__3fKZm\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactError = createAction(\"contacts/fetchContactsSuccess\");\n\nexport const addContactRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactsError\");\n\nexport const changeFilter = createAction(\"contacts/ChangeFilter\");\n","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\naxios.defaults.baseURL = \"https://61923b18aeab5c0017105e79.mockapi.io\";\n\nconst fetchContact = () => (dispatch) => {\n  dispatch(fetchContactRequest);\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((e) => dispatch(fetchContactError(e)));\n};\n\nconst addContact = (o) => (dispatch) => {\n  dispatch(addContactRequest());\n  axios\n    .post(\"/contacts\", o)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((e) => dispatch(addContactError(e)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((e) => dispatch(deleteContactError(e)));\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContact,\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport contactsOperations from \"../../redux/Phonebook/phonebook-operations\";\nimport { v4 as uuid } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const contName = uuid();\n  const contNumber = uuid();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [active] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChangeAllInputs = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        console.warn(`Field - ${name} is under constraction`);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const cont = {\n      name: name,\n      phone: number,\n    };\n    dispatch(contactsOperations.addContact(cont));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form__label} htmlFor={contName}>\n        Contacts name:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"text\"\n        id={contName}\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"Will Smith\"\n      />\n      <label className={styles.form__label} htmlFor={contNumber}>\n        Contacts number:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"tel\"\n        id={contNumber}\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"(097) 222-33-222\"\n      />\n      <button className={styles.form__btn} type=\"submit\" disabled={active}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Phonebook/phonebook-actions\";\nimport styles from \"./Filter.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const onFilterChange = (e) => {\n    setFilter(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  const { box, input } = styles;\n  return (\n    <div className={box}>\n      Find contacts by name:\n      <input\n        className={input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   filter: state.phonebookContacts.contactsFilter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange1: (e) => dispatch(changeFilter(e)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useDispatch } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/Phonebook/phonebook-operations\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({ name, number, id }) {\r\n  const dispatch = useDispatch();\r\n  const { contacts__item, contact__name, contact__number, contacts__btn } =\r\n    styles;\r\n  return (\r\n    <li id={id} className={contacts__item}>\r\n      <p className={contact__name}>{name}</p>\r\n      <p className={contact__number}>tel: {number}</p>\r\n      <button\r\n        onClick={() => dispatch(contactsOperations.deleteContact(id))}\r\n        className={contacts__btn}\r\n      >\r\n        Delete contact\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n","export const getContacts = (state) => state.phonebook.contacts;\nexport const getFilter = (state) => state.phonebook.filter;\n","import React, { useEffect } from \"react\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { getContacts, getFilter } from \"../../redux/Phonebook/selectors\";\nimport contactsOperations from \"../../redux/Phonebook/phonebook-operations\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContact());\n  }, []);\n\n  return (\n    <ul className={styles.contacts__list}>\n      {getFilteredContacts().map(({ name, number, id }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n","// import { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\n\nexport default function App() {\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\n// const [contacts, setContacts] = useState(\n//   () => JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n// );\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\nexport const contactsList = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    if (state.some(({ name }) => name === payload.name)) {\n      alert(`Sorry, contact is already in contacts list`);\n      return state;\n    }\n    return [...state, payload];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport const contactsFilter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { contactsFilter, contactsList } from \"./Phonebook/phonebook-reducer\";\nimport logger from \"redux-logger\";\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst phoneBookReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactsFilter,\n});\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phonebook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n// export const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor} loading={null}> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2z-mP\",\"form__label\":\"ContactForm_form__label__1P9us\",\"form__input\":\"ContactForm_form__input__32NfC\",\"form__btn\":\"ContactForm_form__btn__VgW6K\"};"],"sourceRoot":""}