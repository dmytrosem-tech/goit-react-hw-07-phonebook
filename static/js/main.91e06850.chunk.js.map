{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/Loader/Loader.module.css","Components/ContactList/ContactList.module.css","redux/Phonebook/selectors.js","services/phonebook-api.js","redux/Phonebook/phonebook-operations.js","Components/ContactForm/ContactForm.js","redux/Phonebook/phonebook-actions.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","Components/Loader/Loader.js","Components/ContactList/ContactList.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","phonebook","contacts","getFilter","filter","getLoading","loading","fetchContactsAsync","a","axios","get","data","addContactAsync","o","post","deleteContactsAsync","id","delete","defaults","baseURL","fetchContact","createAsyncThunk","phoneBookAPI","addContact","deleteContact","ContactForm","contName","uuid","contNumber","useState","name","setName","number","setNumber","active","useSelector","dispatch","useDispatch","handleChangeAllInputs","e","target","value","console","warn","resetForm","className","styles","form","onSubmit","preventDefault","cont","phone","some","alert","form__label","htmlFor","form__input","type","pattern","title","required","onChange","placeholder","form__btn","disabled","changeFilter","createAction","Filter","setFilter","box","input","ContactItem","contacts__item","contact__name","contact__number","contacts__btn","onClick","Loader","spin","size","ContactList","isLoading","useEffect","contacts__list","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","map","App","contactsList","createReducer","fulfilled","_","payload","pending","rejected","contactsFilter","phoneBookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91e06850.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"ContactItem_contacts__item__35x6N\",\"contact__name\":\"ContactItem_contact__name__t8xtg\",\"contact__number\":\"ContactItem_contact__number__KMvEb\",\"contacts__btn\":\"ContactItem_contacts__btn__3Kw-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__1owqC\",\"input\":\"Filter_input__2YIXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin\":\"Loader_spin__ySBOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__3fKZm\"};","export const getContacts = (state) => state.phonebook.contacts;\nexport const getFilter = (state) => state.phonebook.filter;\nexport const getLoading = (state) => state.phonebook.loading;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://61923b18aeab5c0017105e79.mockapi.io\";\n\nexport async function fetchContactsAsync() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function addContactAsync(o) {\n  const { data } = await axios.post(\"/contacts\", o);\n  return data;\n}\nexport async function deleteContactsAsync(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as phoneBookAPI from \"../../services/phonebook-api\";\n// import {\n//   fetchContactRequest,\n//   fetchContactSuccess,\n//   fetchContactError,\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   deleteContactError,\n// } from \"./phonebook-actions\";\n\n//---------------------------------------------asyncThunk----------------------------------------------//\nexport const fetchContact = createAsyncThunk(\n  \"contacts/fetchContactsGlobal\",\n  async () => {\n    const contacts = await phoneBookAPI.fetchContactsAsync();\n    return contacts;\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/сontactsGlobal\",\n  async (o) => {\n    const contacts = await phoneBookAPI.addContactAsync(o);\n    return contacts;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContactGlobal\",\n  async (id) => {\n    await phoneBookAPI.deleteContactsAsync(id);\n    return id;\n  }\n);\n\n//------------------------------------------------ASYNC-------------------------------------------//\n// const fetchContact = () => async (dispatch) => {\n//   dispatch(fetchContactRequest());\n//   try {\n//     const contacts = await phoneBookAPI.fetchContactsAsync();\n//     dispatch(fetchContactSuccess(contacts));\n//   } catch (error) {\n//     dispatch(fetchContactError(error));\n//   }\n// };\n// const addContact = (o) => async (dispatch) => {\n//   dispatch(addContactRequest());\n//   try {\n//     const contacts = await phoneBookAPI.addContactAsync(o);\n//     dispatch(addContactSuccess(contacts));\n//   } catch (error) {\n//     dispatch(addContactError(error));\n//   }\n// };\n// const deleteContact = (id) => async (dispatch) => {\n//   dispatch(deleteContactRequest());\n//   try {\n//     await phoneBookAPI.deleteContactsAsync(id);\n//     dispatch(deleteContactSuccess(id));\n//   } catch (error) {\n//     dispatch(deleteContactError(error));\n//   }\n// };\n\n// ------------------------------------------ AXIOS-----------------------------------------//\n// const fetchContact = () => (dispatch) => {\n//   dispatch(fetchContactRequest());\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//     .catch((e) => dispatch(fetchContactError(e)));\n// };\n\n// const addContact = (o) => (dispatch) => {\n//   dispatch(addContactRequest());\n//   axios\n//     .post(\"/contacts\", o)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch((e) => dispatch(addContactError(e)));\n// };\n\n// const deleteContact = (contactId) => (dispatch) => {\n//   dispatch(deleteContactRequest());\n//   axios\n//     .delete(`/contacts/${contactId}`)\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\n//     .catch((e) => dispatch(deleteContactError(e)));\n// };\n\n// export default {\n//   addContact,\n//   deleteContact,\n//   fetchContact,\n// };\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/Phonebook/selectors\";\nimport { addContact } from \"../../redux/Phonebook/phonebook-operations\";\nimport { v4 as uuid } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const contName = uuid();\n  const contNumber = uuid();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [active] = useState(false);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeAllInputs = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        console.warn(`Field - ${name} is under constraction`);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const cont = {\n      name: name,\n      phone: number,\n    };\n    if (contacts.some(({ name }) => name === cont.name)) {\n      return alert(`Sorry, contact is already in contacts list`);\n    }\n    dispatch(addContact(cont));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form__label} htmlFor={contName}>\n        Contacts name:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"text\"\n        id={contName}\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"Will Smith\"\n      />\n      <label className={styles.form__label} htmlFor={contNumber}>\n        Contacts number:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"tel\"\n        id={contNumber}\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"(097) 222-33-222\"\n      />\n      <button className={styles.form__btn} type=\"submit\" disabled={active}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// export const fetchContactRequest = createAction(\n//   \"contacts/fetchContactsRequest\"\n// );\n// export const fetchContactSuccess = createAction(\n//   \"contacts/fetchContactsSuccess\"\n// );\n// export const fetchContactError = createAction(\"contacts/fetchContactsSuccess\");\n\n// export const addContactRequest = createAction(\"contacts/addContactsRequest\");\n// export const addContactSuccess = createAction(\"contacts/addContactsSuccess\");\n// export const addContactError = createAction(\"contacts/addContactsError\");\n\n// export const deleteContactRequest = createAction(\n//   \"contacts/deleteContactsRequest\"\n// );\n// export const deleteContactSuccess = createAction(\n//   \"contacts/deleteContactsSuccess\"\n// );\n// export const deleteContactError = createAction(\"contacts/deleteContactsError\");\n\nexport const changeFilter = createAction(\"contacts/ChangeFilter\");\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Phonebook/phonebook-actions\";\nimport styles from \"./Filter.module.css\";\n// import { connect } from \"react-redux\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const onFilterChange = (e) => {\n    setFilter(e.target.value);\n    dispatch(changeFilter(e.target.value));\n  };\n\n  const { box, input } = styles;\n  return (\n    <div className={box}>\n      Find contacts by name:\n      <input\n        className={input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   filter: state.phonebookContacts.contactsFilter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange1: (e) => dispatch(changeFilter(e)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/Phonebook/phonebook-operations\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactItem.module.css\";\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const { contacts__item, contact__name, contact__number, contacts__btn } =\n    styles;\n  return (\n    <li id={id} className={contacts__item}>\n      <p className={contact__name}>{name}</p>\n      <p className={contact__number}>tel: {number}</p>\n      <button\n        onClick={() => dispatch(deleteContact(id))}\n        className={contacts__btn}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n","import { ImSpinner } from \"react-icons/im\";\nimport styles from \"./Loader.module.css\";\n\nexport default function Loader() {\n  return (\n    <div className=\"spinner\">\n      <div className={styles.spin}>\n        <ImSpinner size=\"32\" className=\"icon-spin\" />\n        Loading...\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ContactItem from \"../ContactItem\";\nimport Loader from \"../Loader/Loader\";\nimport { fetchContact } from \"../../redux/Phonebook/phonebook-operations\";\nimport {\n  getContacts,\n  getFilter,\n  getLoading,\n} from \"../../redux/Phonebook/selectors\";\nimport styles from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, []);\n\n  return (\n    <ul className={styles.contacts__list}>\n      {isLoading && <Loader />}\n      {getFilteredContacts().map(({ name, phone, id }) => (\n        <ContactItem key={id} name={name} number={phone} id={id} />\n      ))}\n    </ul>\n  );\n}\n","// import { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  changeFilter,\n  // fetchContactRequest,\n  // fetchContactSuccess,\n  // fetchContactError,\n  // addContactRequest,\n  // addContactSuccess,\n  // addContactError,\n  // deleteContactSuccess,\n  // deleteContactRequest,\n  // deleteContactError,\n} from \"./phonebook-actions\";\nimport {\n  fetchContact,\n  addContact,\n  deleteContact,\n} from \"./phonebook-operations\";\n\nexport const contactsList = createReducer([], {\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContact.pending]: () => true,\n  [fetchContact.fulfilled]: () => false,\n  [fetchContact.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nexport const contactsFilter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  contactsFilter,\n  contactsList,\n  loading,\n} from \"./Phonebook/phonebook-reducer\";\nimport logger from \"redux-logger\";\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst phoneBookReducer = combineReducers({\n  contacts: contactsList,\n  filter: contactsFilter,\n  loading,\n});\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phonebook: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n// export const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor} loading={null}> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2z-mP\",\"form__label\":\"ContactForm_form__label__1P9us\",\"form__input\":\"ContactForm_form__input__32NfC\",\"form__btn\":\"ContactForm_form__btn__VgW6K\"};"],"sourceRoot":""}